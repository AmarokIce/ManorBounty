
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package com.djinfinite.manors_bounty.registries;

import com.djinfinite.manors_bounty.items.*;
import net.minecraft.network.chat.Component;
import net.minecraft.world.food.FoodProperties;
import net.minecraft.world.item.*;
import net.minecraft.world.level.Level;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.client.renderer.item.ItemProperties;

import com.djinfinite.manors_bounty.procedures.BlueberryNameCheckProcedure;
import com.djinfinite.manors_bounty.item.WitchHatItem;
import com.djinfinite.manors_bounty.item.VanillaIceCreamFluidItem;
import com.djinfinite.manors_bounty.item.VanillaChocolateIceCreamItem;
import com.djinfinite.manors_bounty.item.VanillaCakeSliceItem;
import com.djinfinite.manors_bounty.item.TrufflePieSliceItem;
import com.djinfinite.manors_bounty.item.TruffleItem;
import com.djinfinite.manors_bounty.item.StarfruitIceCreamFluidItem;
import com.djinfinite.manors_bounty.item.SnowDyeItem;
import com.djinfinite.manors_bounty.item.PrawnAndCornSoupItem;
import com.djinfinite.manors_bounty.item.PearlRockItem;
import com.djinfinite.manors_bounty.item.PancakeItem;
import com.djinfinite.manors_bounty.item.OliveFruitItem;
import com.djinfinite.manors_bounty.item.NetherWartSoulCakeSliceItem;
import com.djinfinite.manors_bounty.item.MisoSoupItem;
import com.djinfinite.manors_bounty.item.MinerHatItem;
import com.djinfinite.manors_bounty.item.MainIconItemItem;
import com.djinfinite.manors_bounty.item.LoveSpectrumYellowItemItem;
import com.djinfinite.manors_bounty.item.LoveSpectrumRedItemItem;
import com.djinfinite.manors_bounty.item.LoveSpectrumBlueItemItem;
import com.djinfinite.manors_bounty.item.LavenderEssentialOilItem;
import com.djinfinite.manors_bounty.item.JalapenoItem;
import com.djinfinite.manors_bounty.item.JalapenoIceCreamItem;
import com.djinfinite.manors_bounty.item.JalapenoIceCreamFluidItem;
import com.djinfinite.manors_bounty.item.IceCreamConeItem;
import com.djinfinite.manors_bounty.item.HamimelonSeedItem;
import com.djinfinite.manors_bounty.item.GarlicItem;
import com.djinfinite.manors_bounty.item.FruitPunchItem;
import com.djinfinite.manors_bounty.item.FriedDrumstickItem;
import com.djinfinite.manors_bounty.item.FlowerRingItem;
import com.djinfinite.manors_bounty.item.FilbertItem;
import com.djinfinite.manors_bounty.item.EmptyItemItem;
import com.djinfinite.manors_bounty.item.CreamWithMushroomSoupItem;
import com.djinfinite.manors_bounty.item.CornSeedItem;
import com.djinfinite.manors_bounty.item.CornItem;
import com.djinfinite.manors_bounty.item.CookedBottonMushroomItem;
import com.djinfinite.manors_bounty.item.CoffeeItem;
import com.djinfinite.manors_bounty.item.ChristmasMufflerItem;
import com.djinfinite.manors_bounty.item.ChristmasHatItem;
import com.djinfinite.manors_bounty.item.ChocolateItem;
import com.djinfinite.manors_bounty.item.ChocolateIceCreamFluidItem;
import com.djinfinite.manors_bounty.item.ChocolateDonutItem;
import com.djinfinite.manors_bounty.item.CherriesIceCreamFluidItem;
import com.djinfinite.manors_bounty.item.ChefHatItem;
import com.djinfinite.manors_bounty.item.CaramelChocolateCakeSliceItem;
import com.djinfinite.manors_bounty.item.BuildingIconItemItem;
import com.djinfinite.manors_bounty.item.BubbleTeaItem;
import com.djinfinite.manors_bounty.item.BoxedChocolateMilkItem;
import com.djinfinite.manors_bounty.item.BottledOliveOilItem;
import com.djinfinite.manors_bounty.item.BorschtItem;
import com.djinfinite.manors_bounty.item.BlueberryIceCreamFluidItem;
import com.djinfinite.manors_bounty.item.AlfalfaSeedItem;
import com.djinfinite.manors_bounty.item.AlfalfaItem;
import com.djinfinite.manors_bounty.block.display.TrufflePieDisplayItem;
import com.djinfinite.manors_bounty.block.display.ShirazCarpetDisplayItem;
import com.djinfinite.manors_bounty.block.display.PrawnAndCornSoupBlockDisplayItem;
import com.djinfinite.manors_bounty.block.display.PicnicMatInfiniteDisplayItem;
import com.djinfinite.manors_bounty.block.display.PicnicMatDisplayItem;
import com.djinfinite.manors_bounty.block.display.PancakeBlockDisplayItem;
import com.djinfinite.manors_bounty.block.display.MisoSoupBlockDisplayItem;
import com.djinfinite.manors_bounty.block.display.MarbleBowlDisplayItem;
import com.djinfinite.manors_bounty.block.display.MagicCircleCarpetDisplayItem;
import com.djinfinite.manors_bounty.block.display.HoundstoothInfiniteCarpetDisplayItem;
import com.djinfinite.manors_bounty.block.display.HoundstoothCarpetDisplayItem;
import com.djinfinite.manors_bounty.block.display.GiftTallRedDisplayItem;
import com.djinfinite.manors_bounty.block.display.GiftTallPinkDisplayItem;
import com.djinfinite.manors_bounty.block.display.GiftTallLuckyDisplayItem;
import com.djinfinite.manors_bounty.block.display.GiftTallGreenDisplayItem;
import com.djinfinite.manors_bounty.block.display.GiftTallBlueDisplayItem;
import com.djinfinite.manors_bounty.block.display.GiftShortRedDisplayItem;
import com.djinfinite.manors_bounty.block.display.GiftShortPinkDisplayItem;
import com.djinfinite.manors_bounty.block.display.GiftShortLuckyDisplayItem;
import com.djinfinite.manors_bounty.block.display.GiftShortGreenDisplayItem;
import com.djinfinite.manors_bounty.block.display.GiftShortBlueDisplayItem;
import com.djinfinite.manors_bounty.block.display.DragonFruitSliceBlockDisplayItem;
import com.djinfinite.manors_bounty.block.display.CreamWithMushroomSoupBlockDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasWreathsDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasSockDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasRibbonYellowDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasRibbonWhiteDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasRibbonRedDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasRibbonBlueDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasMiniGiftsYellowDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasMiniGiftsWhiteDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasMiniGiftsRedDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasMiniGiftsBlueDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasBaublesYellowDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasBaublesWhiteDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasBaublesRedDisplayItem;
import com.djinfinite.manors_bounty.block.display.ChristmasBaublesBlueDisplayItem;
import com.djinfinite.manors_bounty.block.display.CherriesPieDisplayItem;
import com.djinfinite.manors_bounty.block.display.BorschtBlockDisplayItem;
import com.djinfinite.manors_bounty.ManorsBountyMod;
import org.jetbrains.annotations.Nullable;

import java.util.List;

@SuppressWarnings("unused")
@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
public class ModItems {
	public static final DeferredRegister<Item> REGISTRY = DeferredRegister.create(ForgeRegistries.ITEMS, ManorsBountyMod.MOD_ID);
	public static final RegistryObject<Item> CHORUS_CHROME_CUBE = REGISTRY.register("chorus_chrome_cube", ChorusFruit.Cube::new);
	public static final RegistryObject<Item> LOVE_SPECTRUM_RED_ITEM = REGISTRY.register("love_spectrum_red_item", LoveSpectrumRedItemItem::new);
	public static final RegistryObject<Item> LOVE_SPECTRUM_YELLOW_ITEM = REGISTRY.register("love_spectrum_yellow_item", LoveSpectrumYellowItemItem::new);
	public static final RegistryObject<Item> LOVE_SPECTRUM_BLUE_ITEM = REGISTRY.register("love_spectrum_blue_item", LoveSpectrumBlueItemItem::new);
	public static final RegistryObject<Item> CARAMEL_CHOCOLATE_CAKE = block(ModBlocks.CARAMEL_CHOCOLATE_CAKE);
	public static final RegistryObject<Item> SWEET_BERRY_CAKE = REGISTRY.register(ModBlocks.SWEET_BERRY_CAKE.getId().getPath(),()->new SweetBerryCake(ModBlocks.SWEET_BERRY_CAKE.get()));
	public static final RegistryObject<Item> CHORUS_FLOWER_JELLY_CAKE = REGISTRY.register(ModBlocks.CHORUS_FLOWER_JELLY_CAKE.getId().getPath(),()->new ChorusFlowerJellyCake(ModBlocks.CHORUS_FLOWER_JELLY_CAKE.get()));
	public static final RegistryObject<Item> NETHER_WART_SOUL_CAKE = block(ModBlocks.NETHER_WART_SOUL_CAKE);
	public static final RegistryObject<Item> FLOWER_RING_HELMET = REGISTRY.register("flower_ring_helmet", FlowerRingItem.Helmet::new);
	public static final RegistryObject<Item> BLACK_DIRT = block(ModBlocks.BLACK_DIRT);
	public static final RegistryObject<Item> SNOWY_BLACK_DIRT = block(ModBlocks.SNOWY_BLACK_DIRT);
	public static final RegistryObject<Item> MARBLE = block(ModBlocks.MARBLE);
	public static final RegistryObject<Item> POLISHED_MARBLE = block(ModBlocks.POLISHED_MARBLE);
	public static final RegistryObject<Item> POLISHED_MARBLE_BRICK = block(ModBlocks.POLISHED_MARBLE_BRICK);
	public static final RegistryObject<Item> BORSCHT = REGISTRY.register("borscht", BorschtItem::new);
	public static final RegistryObject<Item> CREAM_WITH_MUSHROOM_SOUP = REGISTRY.register("cream_with_mushroom_soup", CreamWithMushroomSoupItem::new);
	public static final RegistryObject<Item> MISO_SOUP = REGISTRY.register("miso_soup", MisoSoupItem::new);
	public static final RegistryObject<Item> CORN_CROP_1 = block(ModBlocks.CORN_CROP_1);
	public static final RegistryObject<Item> CORN_CROP_2 = block(ModBlocks.CORN_CROP_2);
	public static final RegistryObject<Item> CORN = REGISTRY.register("corn", CornItem::new);
	public static final RegistryObject<Item> CORN_SEED = REGISTRY.register("corn_seed", CornSeedItem::new);
	public static final RegistryObject<Item> GARLIC = REGISTRY.register("garlic", GarlicItem::new);
	public static final RegistryObject<Item> BOTTON_MUSHROOM = block(ModBlocks.BOTTON_MUSHROOM);
	public static final RegistryObject<Item> BOTTON_MUSHROOM_2 = block(ModBlocks.BOTTON_MUSHROOM_2);
	public static final RegistryObject<Item> BOTTON_MUSHROOM_3 = block(ModBlocks.BOTTON_MUSHROOM_3);
	public static final RegistryObject<Item> WOOD_MUSHROOM = block(ModBlocks.WOOD_MUSHROOM);
	public static final RegistryObject<Item> WOOD_MUSHROOM_2 = block(ModBlocks.WOOD_MUSHROOM_2);
	public static final RegistryObject<Item> WOOD_MUSHROOM_3 = block(ModBlocks.WOOD_MUSHROOM_3);
	public static final RegistryObject<Item> COOKED_BOTTON_MUSHROOM = REGISTRY.register("cooked_botton_mushroom", CookedBottonMushroomItem::new);
	public static final RegistryObject<Item> ALFALFA = REGISTRY.register("alfalfa", AlfalfaItem::new);
	public static final RegistryObject<Item> ALFALFA_CROP = block(ModBlocks.ALFALFA_CROP);
	public static final RegistryObject<Item> ALFALFA_SEED = REGISTRY.register("alfalfa_seed", AlfalfaSeedItem::new);
	public static final RegistryObject<Item> LAVENDER = block(ModBlocks.LAVENDER);
	public static final RegistryObject<Item> ALFALFA_PLANT = block(ModBlocks.ALFALFA_PLANT);
	public static final RegistryObject<Item> RICH_BLACK_DIRT = block(ModBlocks.RICH_BLACK_DIRT);
	public static final RegistryObject<Item> RICH_BLACK_DIRT_FARMLAND = block(ModBlocks.RICH_BLACK_DIRT_FARMLAND);
	public static final RegistryObject<Item> LAVENDER_ESSENTIAL_OIL = REGISTRY.register("lavender_essential_oil", LavenderEssentialOilItem::new);
	public static final RegistryObject<Item> FRIGID_GRASS = block(ModBlocks.FRIGID_GRASS);
	public static final RegistryObject<Item> SCOTS_PINE_LOG = block(ModBlocks.SCOTS_PINE_LOG);
	public static final RegistryObject<Item> SCOTS_PINE_LEAVES = block(ModBlocks.SCOTS_PINE_LEAVES);
	public static final RegistryObject<Item> SCOTS_PINE_PLANKS = block(ModBlocks.SCOTS_PINE_PLANKS);
	public static final RegistryObject<Item> STRIPPED_SCOTS_PINE_LOG = block(ModBlocks.STRIPPED_SCOTS_PINE_LOG);
	public static final RegistryObject<Item> SCOTS_PINE_DOOR = doubleBlock(ModBlocks.SCOTS_PINE_DOOR);
	public static final RegistryObject<Item> SCOTS_PINE_TRAPDOOR = block(ModBlocks.SCOTS_PINE_TRAPDOOR);
	public static final RegistryObject<Item> SCOTS_PINE_FENCE = block(ModBlocks.SCOTS_PINE_FENCE);
	public static final RegistryObject<Item> SCOTS_PINE_FENCE_GATE = block(ModBlocks.SCOTS_PINE_FENCE_GATE);
	public static final RegistryObject<Item> SCOTS_PINE_SLAB = block(ModBlocks.SCOTS_PINE_SLAB);
	public static final RegistryObject<Item> SCOTS_PINE_STAIRS = block(ModBlocks.SCOTS_PINE_STAIRS);
	public static final RegistryObject<Item> SCOTS_PINE_BOTTON = block(ModBlocks.SCOTS_PINE_BOTTON);
	public static final RegistryObject<Item> SCOTS_PINE_PRESSURE_PLATE = block(ModBlocks.SCOTS_PINE_PRESSURE_PLATE);
	public static final RegistryObject<Item> SCOTS_PINE_SAPLING = block(ModBlocks.SCOTS_PINE_SAPLING);
	public static final RegistryObject<Item> TRUFFLE = REGISTRY.register("truffle", TruffleItem::new);
	public static final RegistryObject<Item> BLACK_DIRT_TRUFFLE = block(ModBlocks.BLACK_DIRT_TRUFFLE);
	public static final RegistryObject<Item> BLUEBERRY = REGISTRY.register("blueberry", BlueBerries.Self::new);
	public static final RegistryObject<Item> BLUEBERRY_BUSH = block(ModBlocks.BLUEBERRY_BUSH);
	public static final RegistryObject<Item> ALPINE_TREE_LOG = block(ModBlocks.ALPINE_TREE_LOG);
	public static final RegistryObject<Item> ALPINE_TREE_LEAVES = block(ModBlocks.ALPINE_TREE_LEAVES);
	public static final RegistryObject<Item> ALPINE_TREE_PLANKS = block(ModBlocks.ALPINE_TREE_PLANKS);
	public static final RegistryObject<Item> STRIPPED_ALPINE_TREE_LOG = block(ModBlocks.STRIPPED_ALPINE_TREE_LOG);
	public static final RegistryObject<Item> ALPINE_TREE_DOOR = doubleBlock(ModBlocks.ALPINE_TREE_DOOR);
	public static final RegistryObject<Item> ALPINE_TREE_TRAPDOOR = block(ModBlocks.ALPINE_TREE_TRAPDOOR);
	public static final RegistryObject<Item> ALPINE_TREE_FENCE = block(ModBlocks.ALPINE_TREE_FENCE);
	public static final RegistryObject<Item> ALPINE_TREE_FENCE_GATE = block(ModBlocks.ALPINE_TREE_FENCE_GATE);
	public static final RegistryObject<Item> ALPINE_TREE_SLAB = block(ModBlocks.ALPINE_TREE_SLAB);
	public static final RegistryObject<Item> ALPINE_TREE_STAIRS = block(ModBlocks.ALPINE_TREE_STAIRS);
	public static final RegistryObject<Item> ALPINE_TREE_BOTTON = block(ModBlocks.ALPINE_TREE_BOTTON);
	public static final RegistryObject<Item> ALPINE_TREE_PLATE = block(ModBlocks.ALPINE_TREE_PLATE);
	public static final RegistryObject<Item> MARBLE_WALL = block(ModBlocks.MARBLE_WALL);
	public static final RegistryObject<Item> POLISHED_MARBLE_WALL = block(ModBlocks.POLISHED_MARBLE_WALL);
	public static final RegistryObject<Item> POLISHED_MARBLE_BRICK_WALL = block(ModBlocks.POLISHED_MARBLE_BRICK_WALL);
	public static final RegistryObject<Item> MARBLE_SLAB = block(ModBlocks.MARBLE_SLAB);
	public static final RegistryObject<Item> POLISHED_MARBLE_SLAB = block(ModBlocks.POLISHED_MARBLE_SLAB);
	public static final RegistryObject<Item> POLISHED_MARBLE_BRICK_SLAB = block(ModBlocks.POLISHED_MARBLE_BRICK_SLAB);
	public static final RegistryObject<Item> MARBLE_STAIRS = block(ModBlocks.MARBLE_STAIRS);
	public static final RegistryObject<Item> POLISHED_MARBLE_STAIRS = block(ModBlocks.POLISHED_MARBLE_STAIRS);
	public static final RegistryObject<Item> POLISHED_MARBLE_BRICK_STAIRS = block(ModBlocks.POLISHED_MARBLE_BRICK_STAIRS);
	public static final RegistryObject<Item> WITCH_HAT_HELMET = REGISTRY.register("witch_hat_helmet", WitchHatItem.Helmet::new);
	public static final RegistryObject<Item> CHEF_HAT_HELMET = REGISTRY.register("chef_hat_helmet", ChefHatItem.Helmet::new);
	public static final RegistryObject<Item> CHRISTMAS_SOCK = REGISTRY.register(ModBlocks.CHRISTMAS_SOCK.getId().getPath(), () -> new ChristmasSockDisplayItem(ModBlocks.CHRISTMAS_SOCK.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_HAT_HELMET = REGISTRY.register("christmas_hat_helmet", ChristmasHatItem.Helmet::new);
	public static final RegistryObject<Item> CHRISTMAS_MUFFLER_CHESTPLATE = REGISTRY.register("christmas_muffler_chestplate", ChristmasMufflerItem.Chestplate::new);
	public static final RegistryObject<Item> GIFT_SHORT_RED = REGISTRY.register(ModBlocks.GIFT_SHORT_RED.getId().getPath(), () -> new GiftShortRedDisplayItem(ModBlocks.GIFT_SHORT_RED.get(), new Item.Properties()));
	public static final RegistryObject<Item> GIFT_SHORT_GREEN = REGISTRY.register(ModBlocks.GIFT_SHORT_GREEN.getId().getPath(), () -> new GiftShortGreenDisplayItem(ModBlocks.GIFT_SHORT_GREEN.get(), new Item.Properties()));
	public static final RegistryObject<Item> GIFT_SHORT_BLUE = REGISTRY.register(ModBlocks.GIFT_SHORT_BLUE.getId().getPath(), () -> new GiftShortBlueDisplayItem(ModBlocks.GIFT_SHORT_BLUE.get(), new Item.Properties()));
	public static final RegistryObject<Item> GIFT_SHORT_PINK = REGISTRY.register(ModBlocks.GIFT_SHORT_PINK.getId().getPath(), () -> new GiftShortPinkDisplayItem(ModBlocks.GIFT_SHORT_PINK.get(), new Item.Properties()));
	public static final RegistryObject<Item> GIFT_SHORT_LUCKY = REGISTRY.register(ModBlocks.GIFT_SHORT_LUCKY.getId().getPath(), () -> new GiftShortLuckyDisplayItem(ModBlocks.GIFT_SHORT_LUCKY.get(), new Item.Properties()));
	public static final RegistryObject<Item> GIFT_TALL_RED = REGISTRY.register(ModBlocks.GIFT_TALL_RED.getId().getPath(), () -> new GiftTallRedDisplayItem(ModBlocks.GIFT_TALL_RED.get(), new Item.Properties()));
	public static final RegistryObject<Item> GIFT_TALL_GREEN = REGISTRY.register(ModBlocks.GIFT_TALL_GREEN.getId().getPath(), () -> new GiftTallGreenDisplayItem(ModBlocks.GIFT_TALL_GREEN.get(), new Item.Properties()));
	public static final RegistryObject<Item> GIFT_TALL_BLUE = REGISTRY.register(ModBlocks.GIFT_TALL_BLUE.getId().getPath(), () -> new GiftTallBlueDisplayItem(ModBlocks.GIFT_TALL_BLUE.get(), new Item.Properties()));
	public static final RegistryObject<Item> GIFT_TALL_PINK = REGISTRY.register(ModBlocks.GIFT_TALL_PINK.getId().getPath(), () -> new GiftTallPinkDisplayItem(ModBlocks.GIFT_TALL_PINK.get(), new Item.Properties()));
	public static final RegistryObject<Item> GIFT_TALL_LUCKY = REGISTRY.register(ModBlocks.GIFT_TALL_LUCKY.getId().getPath(), () -> new GiftTallLuckyDisplayItem(ModBlocks.GIFT_TALL_LUCKY.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_WREATHS = REGISTRY.register(ModBlocks.CHRISTMAS_WREATHS.getId().getPath(),
			() -> new ChristmasWreathsDisplayItem(ModBlocks.CHRISTMAS_WREATHS.get(), new Item.Properties()));
	public static final RegistryObject<Item> PEARL_ROCK = REGISTRY.register("pearl_rock", PearlRockItem::new);
	public static final RegistryObject<Item> PEARL_ROCK_ORE = block(ModBlocks.PEARL_ROCK_ORE);
	public static final RegistryObject<Item> DEEPSLATE_PEARL_ROCK_ORE = block(ModBlocks.DEEPSLATE_PEARL_ROCK_ORE);
	public static final RegistryObject<Item> MINER_HAT_HELMET = REGISTRY.register("miner_hat_helmet", MinerHatItem.Helmet::new);
	public static final RegistryObject<Item> RADDE = block(ModBlocks.RADDE);
	public static final RegistryObject<Item> GALANTHUS_NIVALIS = block(ModBlocks.GALANTHUS_NIVALIS);
	public static final RegistryObject<Item> WINTER_ROSE = block(ModBlocks.WINTER_ROSE);
	public static final RegistryObject<Item> SNOWY_MYCELIUM = block(ModBlocks.SNOWY_MYCELIUM);
	public static final RegistryObject<Item> BOTTON_MUSHROOM_BLOCK = block(ModBlocks.BOTTON_MUSHROOM_BLOCK);
	public static final RegistryObject<Item> DEBRISHROOM = block(ModBlocks.DEBRISHROOM);
	public static final RegistryObject<Item> CHERRIES = REGISTRY.register("cherries", Cherries.Self::new);
	public static final RegistryObject<Item> CHERRIES_TREE_LOG = block(ModBlocks.CHERRIES_TREE_LOG);
	public static final RegistryObject<Item> CHERRIES_TREE_LEAVES = block(ModBlocks.CHERRIES_TREE_LEAVES);
	public static final RegistryObject<Item> CHERRIES_TREE_PLANKS = block(ModBlocks.CHERRIES_TREE_PLANKS);
	public static final RegistryObject<Item> STRIPPED_CHERRIES_TREE_LOG = block(ModBlocks.STRIPPED_CHERRIES_TREE_LOG);
	public static final RegistryObject<Item> CHERRIES_TREE_DOOR = doubleBlock(ModBlocks.CHERRIES_TREE_DOOR);
	public static final RegistryObject<Item> CHERRIES_TREE_TRAPDOOR = block(ModBlocks.CHERRIES_TREE_TRAPDOOR);
	public static final RegistryObject<Item> CHERRIES_TREE_FENCE = block(ModBlocks.CHERRIES_TREE_FENCE);
	public static final RegistryObject<Item> CHERRIES_TREE_FENCE_GATE = block(ModBlocks.CHERRIES_TREE_FENCE_GATE);
	public static final RegistryObject<Item> CHERRIES_TREE_SLAB = block(ModBlocks.CHERRIES_TREE_SLAB);
	public static final RegistryObject<Item> CHERRIES_TREE_STAIRS = block(ModBlocks.CHERRIES_TREE_STAIRS);
	public static final RegistryObject<Item> CHERRIES_TREE_BOTTON = block(ModBlocks.CHERRIES_TREE_BOTTON);
	public static final RegistryObject<Item> CHERRIES_TREE_PRESSURE_PLATE = block(ModBlocks.CHERRIES_TREE_PRESSURE_PLATE);
	public static final RegistryObject<Item> VOLCANIC_MUD = block(ModBlocks.VOLCANIC_MUD);
	public static final RegistryObject<Item> ACORN = REGISTRY.register("acorn", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> FILBERT = REGISTRY.register("filbert", FilbertItem::new);
	public static final RegistryObject<Item> STRAWBERRY = REGISTRY.register("strawberry", Strawberry.Self::new);
	public static final RegistryObject<Item> STRAWBERRY_BUSH = block(ModBlocks.STRAWBERRY_BUSH);
	public static final RegistryObject<Item> PINEBERRY = REGISTRY.register("pineberry", PineBerry::new);
	public static final RegistryObject<Item> JALAPENO = REGISTRY.register("jalapeno", JalapenoItem::new);
	public static final RegistryObject<Item> STARFRUIT = REGISTRY.register("starfruit", StarFruit.Self::new);
	public static final RegistryObject<Item> STARFRUIT_TREE_LOG = block(ModBlocks.STARFRUIT_TREE_LOG);
	public static final RegistryObject<Item> STARFRUIT_TREE_LEAVES = block(ModBlocks.STARFRUIT_TREE_LEAVES);
	public static final RegistryObject<Item> STARFRUIT_TREE_PLANKS = block(ModBlocks.STARFRUIT_TREE_PLANKS);
	public static final RegistryObject<Item> STRIPPED_STARFRUIT_TREE_LOG = block(ModBlocks.STRIPPED_STARFRUIT_TREE_LOG);
	public static final RegistryObject<Item> STARFRUIT_TREE_DOOR = doubleBlock(ModBlocks.STARFRUIT_TREE_DOOR);
	public static final RegistryObject<Item> STARFRUIT_TREE_TRAPDOOR = block(ModBlocks.STARFRUIT_TREE_TRAPDOOR);
	public static final RegistryObject<Item> STARFRUIT_TREE_FENCE = block(ModBlocks.STARFRUIT_TREE_FENCE);
	public static final RegistryObject<Item> STARFRUIT_TREE_FENCE_GATE = block(ModBlocks.STARFRUIT_TREE_FENCE_GATE);
	public static final RegistryObject<Item> STARFRUIT_TREE_SLAB = block(ModBlocks.STARFRUIT_TREE_SLAB);
	public static final RegistryObject<Item> STARFRUIT_TREE_STAIRS = block(ModBlocks.STARFRUIT_TREE_STAIRS);
	public static final RegistryObject<Item> STARFRUIT_TREE_BOTTON = block(ModBlocks.STARFRUIT_TREE_BOTTON);
	public static final RegistryObject<Item> STARFRUIT_TREE_PRESSURE_PLATE = block(ModBlocks.STARFRUIT_TREE_PRESSURE_PLATE);
	public static final RegistryObject<Item> STARFRUIT_SLICE = REGISTRY.register("starfruit_slice", StarFruit.Sliced::new);
	public static final RegistryObject<Item> SNOW_DYE = REGISTRY.register("snow_dye", SnowDyeItem::new);
	public static final RegistryObject<Item> SNOW_TERRACOTTA = block(ModBlocks.SNOW_TERRACOTTA);
	public static final RegistryObject<Item> SNOW_GLAZED_TERRACOTTA = block(ModBlocks.SNOW_GLAZED_TERRACOTTA);
	public static final RegistryObject<Item> SNOW_CONCRETE_POWDER = block(ModBlocks.SNOW_CONCRETE_POWDER);
	public static final RegistryObject<Item> SNOW_CONCRETE = block(ModBlocks.SNOW_CONCRETE);
	public static final RegistryObject<Item> SOUL_ROSE = block(ModBlocks.SOUL_ROSE);
	public static final RegistryObject<Item> ICE_CREAM_CONE = REGISTRY.register("ice_cream_cone", IceCreamConeItem::new);
	public static final RegistryObject<Item> VANILLA_ICE_CREAM = REGISTRY.register("vanilla_ice_cream", ()->new Item(new Item.Properties().stacksTo(16).food((new FoodProperties.Builder()).nutrition(6).saturationMod(0.3f).build())));
	public static final RegistryObject<Item> BLUEBERRY_ICE_CREAM = REGISTRY.register("blueberry_ice_cream", BlueBerries.BlueBerryIceCream::new);
	public static final RegistryObject<Item> CHERRIES_ICE_CREAM = REGISTRY.register("cherries_ice_cream", Cherries.IceCream::new);
	public static final RegistryObject<Item> STARFRUIT_ICE_CREAM = REGISTRY.register("starfruit_ice_cream", StarFruit.IceCream::new);
	public static final RegistryObject<Item> CHOCOLATE_ICE_CREAM = REGISTRY.register("chocolate_ice_cream", ()->new Item(new Item.Properties().stacksTo(16).food((new FoodProperties.Builder()).nutrition(6).saturationMod(0.3f).build())));
	public static final RegistryObject<Item> JALAPENO_ICE_CREAM = REGISTRY.register("jalapeno_ice_cream", JalapenoIceCreamItem::new);
	public static final RegistryObject<Item> VANILLA_ICE_CREAM_FLUID_BUCKET = REGISTRY.register("vanilla_ice_cream_fluid_bucket", VanillaIceCreamFluidItem::new);
	public static final RegistryObject<Item> BLUEBERRY_ICE_CREAM_FLUID_BUCKET = REGISTRY.register("blueberry_ice_cream_fluid_bucket", BlueberryIceCreamFluidItem::new);
	public static final RegistryObject<Item> CHERRIES_ICE_CREAM_FLUID_BUCKET = REGISTRY.register("cherries_ice_cream_fluid_bucket", CherriesIceCreamFluidItem::new);
	public static final RegistryObject<Item> STARFRUIT_ICE_CREAM_FLUID_BUCKET = REGISTRY.register("starfruit_ice_cream_fluid_bucket", StarfruitIceCreamFluidItem::new);
	public static final RegistryObject<Item> CHOCOLATE_ICE_CREAM_FLUID_BUCKET = REGISTRY.register("chocolate_ice_cream_fluid_bucket", ChocolateIceCreamFluidItem::new);
	public static final RegistryObject<Item> JALAPENO_ICE_CREAM_FLUID_BUCKET = REGISTRY.register("jalapeno_ice_cream_fluid_bucket", JalapenoIceCreamFluidItem::new);
	public static final RegistryObject<Item> ICE_CREAM_MACHINE = block(ModBlocks.ICE_CREAM_MACHINE);
	public static final RegistryObject<Item> OLIVE_OIL_BUCKET = REGISTRY.register("olive_oil_bucket", ()->new BucketItem(ModFluids.OLIVE_OIL,new Item.Properties().stacksTo(1).craftRemainder(Items.BUCKET)));
	public static final RegistryObject<Item> OLIVE_FRUIT = REGISTRY.register("olive_fruit", OliveFruitItem::new);
	public static final RegistryObject<Item> OLIVE_TREE_LOG = block(ModBlocks.OLIVE_TREE_LOG);
	public static final RegistryObject<Item> OLIVE_TREE_LEAVES = block(ModBlocks.OLIVE_TREE_LEAVES);
	public static final RegistryObject<Item> OLIVE_TREE_PLANKS = block(ModBlocks.OLIVE_TREE_PLANKS);
	public static final RegistryObject<Item> STRIPPED_OLIVE_TREE_LOG = block(ModBlocks.STRIPPED_OLIVE_TREE_LOG);
	public static final RegistryObject<Item> OLIVE_TREE_DOOR = doubleBlock(ModBlocks.OLIVE_TREE_DOOR);
	public static final RegistryObject<Item> OLIVE_TREE_TRAPDOOR = block(ModBlocks.OLIVE_TREE_TRAPDOOR);
	public static final RegistryObject<Item> OLIVE_TREE_FENCE = block(ModBlocks.OLIVE_TREE_FENCE);
	public static final RegistryObject<Item> OLIVE_TREE_FENCE_GATE = block(ModBlocks.OLIVE_TREE_FENCE_GATE);
	public static final RegistryObject<Item> OLIVE_TREE_SLAB = block(ModBlocks.OLIVE_TREE_SLAB);
	public static final RegistryObject<Item> OLIVE_TREE_STAIRS = block(ModBlocks.OLIVE_TREE_STAIRS);
	public static final RegistryObject<Item> OLIVE_TREE_BOTTON = block(ModBlocks.OLIVE_TREE_BOTTON);
	public static final RegistryObject<Item> OLIVE_TREE_PRESSURE_PLATE = block(ModBlocks.OLIVE_TREE_PRESSURE_PLATE);
	public static final RegistryObject<Item> FRYER = block(ModBlocks.FRYER);
	public static final RegistryObject<Item> FRIED_DRUMSTICK = REGISTRY.register("fried_drumstick", FriedDrumstickItem::new);
	public static final RegistryObject<Item> FRIED_PORKCHOP = REGISTRY.register("fried_porkchop", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(10).saturationMod(0.85f).meat().build())));
	public static final RegistryObject<Item> FRIED_STEAK = REGISTRY.register("fried_steak", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(10).saturationMod(0.85f).meat().build())));
	public static final RegistryObject<Item> RAW_PRAWN = REGISTRY.register("raw_prawn", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(2).saturationMod(0.1f).meat().build())));
	public static final RegistryObject<Item> COOKED_PRAWN = REGISTRY.register("cooked_prawn", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(4).saturationMod(0.6f).meat().build())));
	public static final RegistryObject<Item> FRIED_TENPURA = REGISTRY.register("fried_tenpura", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(6).saturationMod(0.65f).meat().build())));
	public static final RegistryObject<Item> PINEAPPLE_SLICE = REGISTRY.register("pineapple_slice", Pineapple.Sliced::new);
	public static final RegistryObject<Item> CREATIVITY_MECHANISM = REGISTRY.register("creativity_mechanism", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> ORANGE = REGISTRY.register("orange", Orange.Self::new);
	public static final RegistryObject<Item> SCOTS_PINE_WOOD = block(ModBlocks.SCOTS_PINE_WOOD);
	public static final RegistryObject<Item> STRIPPED_SCOTS_PINE_WOOD = block(ModBlocks.STRIPPED_SCOTS_PINE_WOOD);
	public static final RegistryObject<Item> ALPINE_TREE_WOOD = block(ModBlocks.ALPINE_TREE_WOOD);
	public static final RegistryObject<Item> STRIPPED_ALPINE_TREE_WOOD = block(ModBlocks.STRIPPED_ALPINE_TREE_WOOD);
	public static final RegistryObject<Item> CHERRIES_TREE_WOOD = block(ModBlocks.CHERRIES_TREE_WOOD);
	public static final RegistryObject<Item> STRIPPED_CHERRIES_TREE_WOOD = block(ModBlocks.STRIPPED_CHERRIES_TREE_WOOD);
	public static final RegistryObject<Item> STARFRUIT_TREE_WOOD = block(ModBlocks.STARFRUIT_TREE_WOOD);
	public static final RegistryObject<Item> STRIPPED_STARFRUIT_TREE_WOOD = block(ModBlocks.STRIPPED_STARFRUIT_TREE_WOOD);
	public static final RegistryObject<Item> OLIVE_TREE_WOOD = block(ModBlocks.OLIVE_TREE_WOOD);
	public static final RegistryObject<Item> STRIPPED_OLIVE_TREE_WOOD = block(ModBlocks.STRIPPED_OLIVE_TREE_WOOD);
	public static final RegistryObject<Item> RUTACEAE_TREE_LOG = block(ModBlocks.RUTACEAE_TREE_LOG);
	public static final RegistryObject<Item> STRIPPED_RUTACEAE_TREE_LOG = block(ModBlocks.STRIPPED_RUTACEAE_TREE_LOG);
	public static final RegistryObject<Item> RUTACEAE_TREE_PLANKS = block(ModBlocks.RUTACEAE_TREE_PLANKS);
	public static final RegistryObject<Item> RUTACEAE_TREE_WOOD = block(ModBlocks.RUTACEAE_TREE_WOOD);
	public static final RegistryObject<Item> STRIPPED_RUTACEAE_TREE_WOOD = block(ModBlocks.STRIPPED_RUTACEAE_TREE_WOOD);
	public static final RegistryObject<Item> RUTACEAE_TREE_DOOR = doubleBlock(ModBlocks.RUTACEAE_TREE_DOOR);
	public static final RegistryObject<Item> RUTACEAE_TREE_TRAPDOOR = block(ModBlocks.RUTACEAE_TREE_TRAPDOOR);
	public static final RegistryObject<Item> RUTACEAE_TREE_FENCE = block(ModBlocks.RUTACEAE_TREE_FENCE);
	public static final RegistryObject<Item> RUTACEAE_TREE_FENCE_GATE = block(ModBlocks.RUTACEAE_TREE_FENCE_GATE);
	public static final RegistryObject<Item> RUTACEAE_TREE_SLAB = block(ModBlocks.RUTACEAE_TREE_SLAB);
	public static final RegistryObject<Item> RUTACEAE_TREE_STAIRS = block(ModBlocks.RUTACEAE_TREE_STAIRS);
	public static final RegistryObject<Item> RUTACEAE_TREE_BOTTON = block(ModBlocks.RUTACEAE_TREE_BOTTON);
	public static final RegistryObject<Item> RUTACEAE_TREE_PRESSURE_PLATE = block(ModBlocks.RUTACEAE_TREE_PRESSURE_PLATE);
	public static final RegistryObject<Item> ORANGE_LEAVES = block(ModBlocks.ORANGE_LEAVES);
	public static final RegistryObject<Item> PINEAPPLE = block(ModBlocks.PINEAPPLE);
	public static final RegistryObject<Item> ROSACEAE_TREE_LOG = block(ModBlocks.ROSACEAE_TREE_LOG);
	public static final RegistryObject<Item> STRIPPED_ROSACEAE_TREE_LOG = block(ModBlocks.STRIPPED_ROSACEAE_TREE_LOG);
	public static final RegistryObject<Item> ROSACEAE_TREE_PLANKS = block(ModBlocks.ROSACEAE_TREE_PLANKS);
	public static final RegistryObject<Item> ROSACEAE_TREE_WOOD = block(ModBlocks.ROSACEAE_TREE_WOOD);
	public static final RegistryObject<Item> STRIPPED_ROSACEAE_TREE_WOOD = block(ModBlocks.STRIPPED_ROSACEAE_TREE_WOOD);
	public static final RegistryObject<Item> ROSACEAE_TREE_DOOR = doubleBlock(ModBlocks.ROSACEAE_TREE_DOOR);
	public static final RegistryObject<Item> ROSACEAE_TREE_TRAPDOOR = block(ModBlocks.ROSACEAE_TREE_TRAPDOOR);
	public static final RegistryObject<Item> ROSACEAE_TREE_FENCE = block(ModBlocks.ROSACEAE_TREE_FENCE);
	public static final RegistryObject<Item> ROSACEAE_TREE_FENCE_GATE = block(ModBlocks.ROSACEAE_TREE_FENCE_GATE);
	public static final RegistryObject<Item> ROSACEAE_TREE_SLAB = block(ModBlocks.ROSACEAE_TREE_SLAB);
	public static final RegistryObject<Item> ROSACEAE_TREE_STAIRS = block(ModBlocks.ROSACEAE_TREE_STAIRS);
	public static final RegistryObject<Item> ROSACEAE_TREE_BOTTON = block(ModBlocks.ROSACEAE_TREE_BOTTON);
	public static final RegistryObject<Item> ROSACEAE_TREE_PRESSURE_PLATE = block(ModBlocks.ROSACEAE_TREE_PRESSURE_PLATE);
	public static final RegistryObject<Item> APPLE_LEAVES = block(ModBlocks.APPLE_LEAVES);
	public static final RegistryObject<Item> PEACH = REGISTRY.register("peach", Peach.Self::new);
	public static final RegistryObject<Item> PEACH_LEAVES = block(ModBlocks.PEACH_LEAVES);
	public static final RegistryObject<Item> MUSANG_KING_DURIAN = block(ModBlocks.MUSANG_KING_DURIAN);
	public static final RegistryObject<Item> HALF_OF_MUSANG_KING_DURIAN = REGISTRY.register("half_of_musang_king_durian", Durian.HalfOf::new);
	public static final RegistryObject<Item> DURIAN_TREE_LOG = block(ModBlocks.DURIAN_TREE_LOG);
	public static final RegistryObject<Item> DURIAN_TREE_WOOD = block(ModBlocks.DURIAN_TREE_WOOD);
	public static final RegistryObject<Item> DURIAN_TREE_LEAVES = block(ModBlocks.DURIAN_TREE_LEAVES);
	public static final RegistryObject<Item> DURIAN_TREE_PLANKS = block(ModBlocks.DURIAN_TREE_PLANKS);
	public static final RegistryObject<Item> STRIPPED_DURIAN_TREE_LOG = block(ModBlocks.STRIPPED_DURIAN_TREE_LOG);
	public static final RegistryObject<Item> STRIPPED_DURIAN_TREE_WOOD = block(ModBlocks.STRIPPED_DURIAN_TREE_WOOD);
	public static final RegistryObject<Item> DURIAN_TREE_DOOR = doubleBlock(ModBlocks.DURIAN_TREE_DOOR);
	public static final RegistryObject<Item> DURIAN_TREE_TRAPDOOR = block(ModBlocks.DURIAN_TREE_TRAPDOOR);
	public static final RegistryObject<Item> DURIAN_TREE_FENCE = block(ModBlocks.DURIAN_TREE_FENCE);
	public static final RegistryObject<Item> DURIAN_TREE_FENCE_GATE = block(ModBlocks.DURIAN_TREE_FENCE_GATE);
	public static final RegistryObject<Item> DURIAN_TREE_SLAB = block(ModBlocks.DURIAN_TREE_SLAB);
	public static final RegistryObject<Item> DURIAN_TREE_STAIRS = block(ModBlocks.DURIAN_TREE_STAIRS);
	public static final RegistryObject<Item> DURIAN_TREE_BOTTON = block(ModBlocks.DURIAN_TREE_BOTTON);
	public static final RegistryObject<Item> DURIAN_TREE_PRESSURE_PLATE = block(ModBlocks.DURIAN_TREE_PRESSURE_PLATE);
	public static final RegistryObject<Item> DURIAN_FRUIT_1 = block(ModBlocks.DURIAN_FRUIT_1);
	public static final RegistryObject<Item> DURIAN_FRUIT_2 = block(ModBlocks.DURIAN_FRUIT_2);
	public static final RegistryObject<Item> TACO = REGISTRY.register("taco", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(10).saturationMod(0.6f).build())));
	public static final RegistryObject<Item> FRIED_FISH = REGISTRY.register("fried_fish", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(7).saturationMod(0.65f).meat().build())));
	public static final RegistryObject<Item> MUSANG_KING_DURIAN_FLESH = REGISTRY.register("musang_king_durian_flesh", Durian.Flesh::new);
	public static final RegistryObject<Item> CUTTING_BOARD = block(ModBlocks.CUTTING_BOARD);
	public static final RegistryObject<Item> GARLIC_CROP = block(ModBlocks.GARLIC_CROP);
	public static final RegistryObject<Item> PINEAPPLE_CROP = block(ModBlocks.PINEAPPLE_CROP);
	public static final RegistryObject<Item> JALAPENO_CROP_BOTTOM = block(ModBlocks.JALAPENO_CROP_BOTTOM);
	public static final RegistryObject<Item> JALAPENO_CROP_TOP = block(ModBlocks.JALAPENO_CROP_TOP);
	public static final RegistryObject<Item> PINEAPPLE_PASTRIES = REGISTRY.register("pineapple_pastries", Pineapple.Pastries::new);
	public static final RegistryObject<Item> SNOW_GLASS_PANE = block(ModBlocks.SNOW_GLASS_PANE);
	public static final RegistryObject<Item> SNOW_GLASS = block(ModBlocks.SNOW_GLASS);
	public static final RegistryObject<Item> SLOT_BAN_ITEM = REGISTRY.register("slot_ban_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> VANILLA_CHOCOLATE_ICE_CREAM = REGISTRY.register("vanilla_chocolate_ice_cream", VanillaChocolateIceCreamItem::new);
	public static final RegistryObject<Item> BLUEBERRY_CHERRIES_ICE_CREAM = REGISTRY.register("blueberry_cherries_ice_cream", BlueberryCherriesIceCream::new);
	public static final RegistryObject<Item> STARFRUIT_JALAPENO_ICE_CREAM = REGISTRY.register("starfruit_jalapeno_ice_cream", StarfruitJalapenoIceCream::new);
	public static final RegistryObject<Item> FRIED_CHICKEN = REGISTRY.register("fried_chicken", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(8).saturationMod(0.65f).meat().build())));
	public static final RegistryObject<Item> CRANBERRY = REGISTRY.register("cranberry", Cranberry.Self::new);
	public static final RegistryObject<Item> DURIAN_CRISP = REGISTRY.register("durian_crisp", Durian.Crisp::new);
	public static final RegistryObject<Item> COOKED_DURIAN_FLESH = REGISTRY.register("cooked_durian_flesh", Durian.CookedFlesh::new);
	public static final RegistryObject<Item> POWSICLE_PALETERIA = REGISTRY.register("powsicle_paleteria", PowsiclePaleteria::new);
	public static final RegistryObject<Item> LUAU_PALETERIA = REGISTRY.register("luau_paleteria", LuauPaleteria::new);
	public static final RegistryObject<Item> WATERMELON_PALETERIA = REGISTRY.register("watermelon_paleteria", WaterMelon.Paleteria::new);
	public static final RegistryObject<Item> PINK_SNOWMAN_PALETERIA = REGISTRY.register("pink_snowman_paleteria", PinkSnowmanPaleteria::new);
	public static final RegistryObject<Item> HEART_CRUSH_PALETERIA = REGISTRY.register("heart_crush_paleteria", HeartCrushPaleteria::new);
	public static final RegistryObject<Item> ORANGE_SEGMENT = REGISTRY.register("orange_segment", Orange.Sliced::new);
	public static final RegistryObject<Item> PANCAKE = REGISTRY.register("pancake", PancakeItem::new);
	public static final RegistryObject<Item> MUFFIN = REGISTRY.register("muffin", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(5).saturationMod(0.6f).build())));
	public static final RegistryObject<Item> BLUEBERRY_MUFFIN = REGISTRY.register("blueberry_muffin", BlueBerries.BlueBerryMuffin::new);
	public static final RegistryObject<Item> CRANBERRY_MUFFIN = REGISTRY.register("cranberry_muffin", Cranberry.Muffin::new);
	public static final RegistryObject<Item> CHOCOLATE_MUFFIN = REGISTRY.register("chocolate_muffin", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(5).saturationMod(0.6f).build())));
	public static final RegistryObject<Item> CUPCAKE_QAQ = REGISTRY.register("cupcake_qaq", ()->new Item(new Item.Properties().rarity(Rarity.EPIC).food((new FoodProperties.Builder()).nutrition(5).saturationMod(0.6f).build())));
	public static final RegistryObject<Item> DURIAN_MILE_CREPE_CAKE = REGISTRY.register("durian_mile_crepe_cake", Durian.Cake::new);
	public static final RegistryObject<Item> DURIAN_MILE_CREPE_CAKE_SLICE = REGISTRY.register("durian_mile_crepe_cake_slice", Durian.CakeSlice::new);
	public static final RegistryObject<Item> CRANBERRY_BUSH = block(ModBlocks.CRANBERRY_BUSH);
	public static final RegistryObject<Item> LEMON = REGISTRY.register("lemon", Lemon.Self::new);
	public static final RegistryObject<Item> LEMON_LEAVES = block(ModBlocks.LEMON_LEAVES);
	public static final RegistryObject<Item> LEMON_SLICE = REGISTRY.register("lemon_slice", Lemon.Sliced::new);
	public static final RegistryObject<Item> PEAR = REGISTRY.register("pear", Pear.Self::new);
	public static final RegistryObject<Item> PEAR_LEAVES = block(ModBlocks.PEAR_LEAVES);
	public static final RegistryObject<Item> HOT_SPRING_BUCKET = REGISTRY.register("hot_spring_bucket", ()->new BucketItem(ModFluids.HOT_SPRING, new Item.Properties().craftRemainder(Items.BUCKET).stacksTo(1)));
	public static final RegistryObject<Item> OVEN = block(ModBlocks.OVEN);
	public static final RegistryObject<Item> CRANBERRY_COOKIE = REGISTRY.register("cranberry_cookie", Cranberry.Cookie::new);
	public static final RegistryObject<Item> BLUEBERRY_COOKIE = REGISTRY.register("blueberry_cookie", BlueBerries.BlueBerryCookie::new);
	public static final RegistryObject<Item> LEMON_COOKIE = REGISTRY.register("lemon_cookie", Lemon.Cookie::new);
	public static final RegistryObject<Item> TEM_ITEM_150 = REGISTRY.register("tem_item_150", ()->new Item(new Item.Properties().stacksTo(1)));
	public static final RegistryObject<Item> TEM_ITEM_200 = REGISTRY.register("tem_item_200", ()->new Item(new Item.Properties().stacksTo(1)));
	public static final RegistryObject<Item> TEM_ITEM_250 = REGISTRY.register("tem_item_250", ()->new Item(new Item.Properties().stacksTo(1)));
	public static final RegistryObject<Item> TIME_ITEM_5 = REGISTRY.register("time_item_5", ()->new Item(new Item.Properties().stacksTo(1)));
	public static final RegistryObject<Item> TIME_ITEM_10 = REGISTRY.register("time_item_10", ()->new Item(new Item.Properties().stacksTo(1)));
	public static final RegistryObject<Item> TIME_ITEM_15 = REGISTRY.register("time_item_15", ()->new Item(new Item.Properties().stacksTo(1)));
	public static final RegistryObject<Item> EMPTY_ITEM = REGISTRY.register("empty_item", EmptyItemItem::new);
	public static final RegistryObject<Item> PRAWN_AND_CORN_SOUP = REGISTRY.register("prawn_and_corn_soup", PrawnAndCornSoupItem::new);
	public static final RegistryObject<Item> CHERRIES_PIE = REGISTRY.register(ModBlocks.CHERRIES_PIE.getId().getPath(), () -> new CherriesPieDisplayItem(ModBlocks.CHERRIES_PIE.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHERRIES_PIE_SLICE = REGISTRY.register("cherries_pie_slice", Cherries.PieSlice::new);
	public static final RegistryObject<Item> TRUFFLE_PIE = REGISTRY.register(ModBlocks.TRUFFLE_PIE.getId().getPath(), () -> new TrufflePieDisplayItem(ModBlocks.TRUFFLE_PIE.get(), new Item.Properties()));
	public static final RegistryObject<Item> TRUFFLE_PIE_SLICE = REGISTRY.register("truffle_pie_slice", TrufflePieSliceItem::new);
	public static final RegistryObject<Item> HAMIMELON = block(ModBlocks.HAMIMELON);
	public static final RegistryObject<Item> HAMIMELON_SLICE = REGISTRY.register("hamimelon_slice", HamiMelon.Slice::new);
	public static final RegistryObject<Item> HAMIMELON_SEED = REGISTRY.register("hamimelon_seed", HamimelonSeedItem::new);
	public static final RegistryObject<Item> HAMIMELON_CROP = block(ModBlocks.HAMIMELON_CROP);
	public static final RegistryObject<Item> MANGO = REGISTRY.register("mango", Mango.Self::new);
	public static final RegistryObject<Item> MANGO_TREE_LOG = block(ModBlocks.MANGO_TREE_LOG);
	public static final RegistryObject<Item> MANGO_TREE_WOOD = block(ModBlocks.MANGO_TREE_WOOD);
	public static final RegistryObject<Item> MANGO_TREE_LEAVES = block(ModBlocks.MANGO_TREE_LEAVES);
	public static final RegistryObject<Item> MANGO_TREE_PLANKS = block(ModBlocks.MANGO_TREE_PLANKS);
	public static final RegistryObject<Item> STRIPPED_MANGO_TREE_LOG = block(ModBlocks.STRIPPED_MANGO_TREE_LOG);
	public static final RegistryObject<Item> STRIPPED_MANGO_TREE_WOOD = block(ModBlocks.STRIPPED_MANGO_TREE_WOOD);
	public static final RegistryObject<Item> MANGO_TREE_DOOR = doubleBlock(ModBlocks.MANGO_TREE_DOOR);
	public static final RegistryObject<Item> MANGO_TREE_TRAPDOOR = block(ModBlocks.MANGO_TREE_TRAPDOOR);
	public static final RegistryObject<Item> MANGO_TREE_FENCE = block(ModBlocks.MANGO_TREE_FENCE);
	public static final RegistryObject<Item> MANGO_TREE_FENCE_GATE = block(ModBlocks.MANGO_TREE_FENCE_GATE);
	public static final RegistryObject<Item> MANGO_TREE_SLAB = block(ModBlocks.MANGO_TREE_SLAB);
	public static final RegistryObject<Item> MANGO_TREE_STAIRS = block(ModBlocks.MANGO_TREE_STAIRS);
	public static final RegistryObject<Item> MANGO_TREE_BOTTON = block(ModBlocks.MANGO_TREE_BOTTON);
	public static final RegistryObject<Item> MANGO_TREE_PRESSURE_PLATE = block(ModBlocks.MANGO_TREE_PRESSURE_PLATE);
	public static final RegistryObject<Item> CAKE_LIQUID_BUCKET = REGISTRY.register("cake_liquid_bucket", ()->new BucketItem(ModFluids.CAKE_LIQUID, new Item.Properties().craftRemainder(Items.BUCKET).stacksTo(1)));
	public static final RegistryObject<Item> PINEAPPLE_PALETERIA = REGISTRY.register("pineapple_paleteria", Pineapple.Paleteria::new);
	public static final RegistryObject<Item> MANGO_SLICE = REGISTRY.register("mango_slice", Mango.Slice::new);
	public static final RegistryObject<Item> DONUT = REGISTRY.register("donut", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(7).saturationMod(0.65f).build())));
	public static final RegistryObject<Item> CHOCOLATE_DONUT = REGISTRY.register("chocolate_donut", ChocolateDonutItem::new);
	public static final RegistryObject<Item> STRAWBERRY_DONUT = REGISTRY.register("strawberry_donut", Strawberry.Donut::new);
	public static final RegistryObject<Item> WHITE_CHOCOLATE_DONUT = REGISTRY.register("white_chocolate_donut", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(9).saturationMod(0.65f).build())));
	public static final RegistryObject<Item> LEMON_DONUT = REGISTRY.register("lemon_donut", Lemon.Donut::new);
	public static final RegistryObject<Item> SNOW_DONUT = REGISTRY.register("snow_donut", ()->new Item(new Item.Properties().food((new FoodProperties.Builder()).nutrition(9).saturationMod(0.65f).build())));
	public static final RegistryObject<Item> COFFEE = REGISTRY.register("coffee", CoffeeItem::new);
	public static final RegistryObject<Item> MELON_SODA = REGISTRY.register("melon_soda", HamiMelon.Soda::new);
	public static final RegistryObject<Item> BUBBLE_TEA = REGISTRY.register("bubble_tea", BubbleTeaItem::new);
	public static final RegistryObject<Item> GRIMACE_SHAKE = REGISTRY.register("grimace_shake", GrimaceShake::new);
	public static final RegistryObject<Item> ORANGE_JUICE = REGISTRY.register("orange_juice", Orange.Juice::new);
	public static final RegistryObject<Item> LEMONADE = REGISTRY.register("lemonade", Lemonade::new);
	public static final RegistryObject<Item> APPLE_JUICE = REGISTRY.register("apple_juice", Apple.Drink::new);
	public static final RegistryObject<Item> PEAR_WITH_ROCK_SUGAR = REGISTRY.register("pear_with_rock_sugar", Pear.Juice::new);
	public static final RegistryObject<Item> BELLINI_BASE = REGISTRY.register("bellini_base", Peach.Juice::new);
	public static final RegistryObject<Item> STRAWBERRY_SHAKE = REGISTRY.register("strawberry_shake", Strawberry.Shake::new);
	public static final RegistryObject<Item> BLUEBERRY_YOGURT = REGISTRY.register("blueberry_yogurt", BlueBerries.BlueBerryYogurt::new);
	public static final RegistryObject<Item> MANGO_JUICE = REGISTRY.register("mango_juice", Mango.Juice::new);
	public static final RegistryObject<Item> PINEAPPLE_JUICE = REGISTRY.register("pineapple_juice", Pineapple.Juice::new);
	public static final RegistryObject<Item> FRUIT_PUNCH = REGISTRY.register("fruit_punch", FruitPunchItem::new);
	public static final RegistryObject<Item> DEFORMED_GLASS_BOTTLE = REGISTRY.register("deformed_glass_bottle", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> APPLE_SLICE = REGISTRY.register("apple_slice", Apple.Slice::new);
	public static final RegistryObject<Item> WATERMELON_JUICE = REGISTRY.register("watermelon_juice", WaterMelon.Juice::new);
	public static final RegistryObject<Item> DRAGON_FRUIT = REGISTRY.register("dragon_fruit", DragonFruit.Self::new);
	public static final RegistryObject<Item> DRAGON_FRUIT_SLICE = REGISTRY.register("dragon_fruit_slice", DragonFruit.Slice::new);
	public static final RegistryObject<Item> DRAGON_FRUIT_BLOCK = block(ModBlocks.DRAGON_FRUIT_BLOCK);
	public static final RegistryObject<Item> DRAGON_FRUIT_CACTUS = block(ModBlocks.DRAGON_FRUIT_CACTUS);
	public static final RegistryObject<Item> DRAGON_FRUIT_CACTUS_FLOWER = block(ModBlocks.DRAGON_FRUIT_CACTUS_FLOWER);
	public static final RegistryObject<Item> PEACH_SLICE = REGISTRY.register("peach_slice", Peach.Sliced::new);
	public static final RegistryObject<Item> PEAR_SLICE = REGISTRY.register("pear_slice", Pear.Slice::new);
	public static final RegistryObject<Item> COSMIC_DRAGON_SALAD = REGISTRY.register("cosmic_dragon_salad", CosmicDragonSalad::new);
	public static final RegistryObject<Item> ROSA_SALAD = REGISTRY.register("rosa_salad", RosaSalad::new);
	public static final RegistryObject<Item> MARBLE_BOWL = REGISTRY.register(ModBlocks.MARBLE_BOWL.getId().getPath(), () -> new MarbleBowlDisplayItem(ModBlocks.MARBLE_BOWL.get(), new Item.Properties()));
	public static final RegistryObject<Item> DRAGON_FRUIT_CROP = block(ModBlocks.DRAGON_FRUIT_CROP);
	public static final RegistryObject<Item> PRAWN_AND_CORN_SOUP_BLOCK = REGISTRY.register(ModBlocks.PRAWN_AND_CORN_SOUP_BLOCK.getId().getPath(),
			() -> new PrawnAndCornSoupBlockDisplayItem(ModBlocks.PRAWN_AND_CORN_SOUP_BLOCK.get(), new Item.Properties()));
	public static final RegistryObject<Item> BORSCHT_BLOCK = REGISTRY.register(ModBlocks.BORSCHT_BLOCK.getId().getPath(), () -> new BorschtBlockDisplayItem(ModBlocks.BORSCHT_BLOCK.get(), new Item.Properties()));
	public static final RegistryObject<Item> MISO_SOUP_BLOCK = REGISTRY.register(ModBlocks.MISO_SOUP_BLOCK.getId().getPath(), () -> new MisoSoupBlockDisplayItem(ModBlocks.MISO_SOUP_BLOCK.get(), new Item.Properties()));
	public static final RegistryObject<Item> CREAM_WITH_MUSHROOM_SOUP_BLOCK = REGISTRY.register(ModBlocks.CREAM_WITH_MUSHROOM_SOUP_BLOCK.getId().getPath(),
			() -> new CreamWithMushroomSoupBlockDisplayItem(ModBlocks.CREAM_WITH_MUSHROOM_SOUP_BLOCK.get(), new Item.Properties()));
	public static final RegistryObject<Item> DRAGON_FRUIT_SLICE_BLOCK = REGISTRY.register(ModBlocks.DRAGON_FRUIT_SLICE_BLOCK.getId().getPath(),
			() -> new DragonFruitSliceBlockDisplayItem(ModBlocks.DRAGON_FRUIT_SLICE_BLOCK.get(), new Item.Properties()));
	public static final RegistryObject<Item> PINEAPPLE_PIES = REGISTRY.register("pineapple_pies", Pineapple.Pie::new);
	public static final RegistryObject<Item> PANCAKE_BLOCK = REGISTRY.register(ModBlocks.PANCAKE_BLOCK.getId().getPath(), () -> new PancakeBlockDisplayItem(ModBlocks.PANCAKE_BLOCK.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_RIBBON_RED = REGISTRY.register(ModBlocks.CHRISTMAS_RIBBON_RED.getId().getPath(),
			() -> new ChristmasRibbonRedDisplayItem(ModBlocks.CHRISTMAS_RIBBON_RED.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_RIBBON_YELLOW = REGISTRY.register(ModBlocks.CHRISTMAS_RIBBON_YELLOW.getId().getPath(),
			() -> new ChristmasRibbonYellowDisplayItem(ModBlocks.CHRISTMAS_RIBBON_YELLOW.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_RIBBON_BLUE = REGISTRY.register(ModBlocks.CHRISTMAS_RIBBON_BLUE.getId().getPath(),
			() -> new ChristmasRibbonBlueDisplayItem(ModBlocks.CHRISTMAS_RIBBON_BLUE.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_RIBBON_WHITE = REGISTRY.register(ModBlocks.CHRISTMAS_RIBBON_WHITE.getId().getPath(),
			() -> new ChristmasRibbonWhiteDisplayItem(ModBlocks.CHRISTMAS_RIBBON_WHITE.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_MINI_GIFTS_RED = REGISTRY.register(ModBlocks.CHRISTMAS_MINI_GIFTS_RED.getId().getPath(),
			() -> new ChristmasMiniGiftsRedDisplayItem(ModBlocks.CHRISTMAS_MINI_GIFTS_RED.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_MINI_GIFTS_YELLOW = REGISTRY.register(ModBlocks.CHRISTMAS_MINI_GIFTS_YELLOW.getId().getPath(),
			() -> new ChristmasMiniGiftsYellowDisplayItem(ModBlocks.CHRISTMAS_MINI_GIFTS_YELLOW.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_MINI_GIFTS_BLUE = REGISTRY.register(ModBlocks.CHRISTMAS_MINI_GIFTS_BLUE.getId().getPath(),
			() -> new ChristmasMiniGiftsBlueDisplayItem(ModBlocks.CHRISTMAS_MINI_GIFTS_BLUE.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_MINI_GIFTS_WHITE = REGISTRY.register(ModBlocks.CHRISTMAS_MINI_GIFTS_WHITE.getId().getPath(),
			() -> new ChristmasMiniGiftsWhiteDisplayItem(ModBlocks.CHRISTMAS_MINI_GIFTS_WHITE.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_BAUBLES_RED = REGISTRY.register(ModBlocks.CHRISTMAS_BAUBLES_RED.getId().getPath(),
			() -> new ChristmasBaublesRedDisplayItem(ModBlocks.CHRISTMAS_BAUBLES_RED.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_BAUBLES_YELLOW = REGISTRY.register(ModBlocks.CHRISTMAS_BAUBLES_YELLOW.getId().getPath(),
			() -> new ChristmasBaublesYellowDisplayItem(ModBlocks.CHRISTMAS_BAUBLES_YELLOW.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_BAUBLES_BLUE = REGISTRY.register(ModBlocks.CHRISTMAS_BAUBLES_BLUE.getId().getPath(),
			() -> new ChristmasBaublesBlueDisplayItem(ModBlocks.CHRISTMAS_BAUBLES_BLUE.get(), new Item.Properties()));
	public static final RegistryObject<Item> CHRISTMAS_BAUBLES_WHITE = REGISTRY.register(ModBlocks.CHRISTMAS_BAUBLES_WHITE.getId().getPath(),
			() -> new ChristmasBaublesWhiteDisplayItem(ModBlocks.CHRISTMAS_BAUBLES_WHITE.get(), new Item.Properties()));
	public static final RegistryObject<Item> MANGO_PUDDING = REGISTRY.register("mango_pudding", Mango.Pudding::new);
	public static final RegistryObject<Item> MARTINI = REGISTRY.register("martini", Martini::new);
	public static final RegistryObject<Item> RISALAMANDE = REGISTRY.register("risalamande", Cherries.Risalamande::new);
	public static final RegistryObject<Item> ETON_MESS = REGISTRY.register("eton_mess", SweetBerries.EtonMess::new);
	public static final RegistryObject<Item> MARMALADE = REGISTRY.register("marmalade", Orange.Marmalade::new);
	public static final RegistryObject<Item> HOUNDSTOOTH_CARPET = REGISTRY.register(ModBlocks.HOUNDSTOOTH_CARPET.getId().getPath(),
			() -> new HoundstoothCarpetDisplayItem(ModBlocks.HOUNDSTOOTH_CARPET.get(), new Item.Properties()));
	public static final RegistryObject<Item> MAGIC_CIRCLE_CARPET = REGISTRY.register(ModBlocks.MAGIC_CIRCLE_CARPET.getId().getPath(),
			() -> new MagicCircleCarpetDisplayItem(ModBlocks.MAGIC_CIRCLE_CARPET.get(), new Item.Properties()));
	public static final RegistryObject<Item> SHIRAZ_CARPET = REGISTRY.register(ModBlocks.SHIRAZ_CARPET.getId().getPath(), () -> new ShirazCarpetDisplayItem(ModBlocks.SHIRAZ_CARPET.get(), new Item.Properties()));
	public static final RegistryObject<Item> HOUNDSTOOTH_INFINITE_CARPET = REGISTRY.register(ModBlocks.HOUNDSTOOTH_INFINITE_CARPET.getId().getPath(),
			() -> new HoundstoothInfiniteCarpetDisplayItem(ModBlocks.HOUNDSTOOTH_INFINITE_CARPET.get(), new Item.Properties()));
	public static final RegistryObject<Item> HAMIMELON_PALETERIA = REGISTRY.register("hamimelon_paleteria", HamiMelon.Paleteria::new);
	public static final RegistryObject<Item> BOXED_CHOCOLATE_MILK = REGISTRY.register("boxed_chocolate_milk", BoxedChocolateMilkItem::new);
	public static final RegistryObject<Item> BOXED_LEMON_TEA = REGISTRY.register("boxed_lemon_tea", BoxedLemonTea::new);
	public static final RegistryObject<Item> PICNIC_MAT = REGISTRY.register(ModBlocks.PICNIC_MAT.getId().getPath(), () -> new PicnicMatDisplayItem(ModBlocks.PICNIC_MAT.get(), new Item.Properties()));
	public static final RegistryObject<Item> PICNIC_MAT_INFINITE = REGISTRY.register(ModBlocks.PICNIC_MAT_INFINITE.getId().getPath(),
			() -> new PicnicMatInfiniteDisplayItem(ModBlocks.PICNIC_MAT_INFINITE.get(), new Item.Properties()));
	public static final RegistryObject<Item> SEA_PEARL_SALAD = REGISTRY.register("sea_pearl_salad", SeaPearlSalad::new);
	public static final RegistryObject<Item> CHORUS_FRUIT_JUICE = REGISTRY.register("chorus_fruit_juice", ChorusFruit.Juice::new);
	public static final RegistryObject<Item> MELON_SALAD = REGISTRY.register("melon_salad", MelonSalad::new);
	public static final RegistryObject<Item> BOTTLED_OLIVE_OIL = REGISTRY.register("bottled_olive_oil", BottledOliveOilItem::new);
	public static final RegistryObject<Item> CARAMEL_CHOCOLATE_CAKE_SLICE = REGISTRY.register("caramel_chocolate_cake_slice", CaramelChocolateCakeSliceItem::new);
	public static final RegistryObject<Item> SWEET_BERRY_CAKE_SLICE = REGISTRY.register("sweet_berry_cake_slice", SweetBerries.CakeSlice::new);
	public static final RegistryObject<Item> CHORUS_FLOWER_JELLY_CAKE_SLICE = REGISTRY.register("chorus_flower_jelly_cake_slice", ChorusFruit.CakeSlice::new);
	public static final RegistryObject<Item> NETHER_WART_SOUL_CAKE_SLICE = REGISTRY.register("nether_wart_soul_cake_slice", NetherWartSoulCakeSliceItem::new);
	public static final RegistryObject<Item> VANILLA_CAKE_SLICE = REGISTRY.register("vanilla_cake_slice", VanillaCakeSliceItem::new);
	public static final RegistryObject<Item> TRANSMIT_EFFECT_TIPS_ITEM = REGISTRY.register("transmit_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> ROSA_HEDGE_EFFECT_TIPS_ITEM = REGISTRY.register("rosa_hedge_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> RUTIN_LEMONENE_EFFECT_TIPS_ITEM = REGISTRY.register("rutin_lemonene_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> BURSTING_BERRY_EFFECT_TIPS_ITEM = REGISTRY.register("bursting_berry_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> CHERRY_BLOSSOMS_WEEPING_EFFECT_TIPS_ITEM = REGISTRY.register("cherry_blossoms_weeping_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> MOMENTARY_METEOR_EFFECT_TIPS_ITEM = REGISTRY.register("momentary_meteor_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> SUMMER_HEATWAVE_EFFECT_TIPS_ITEM = REGISTRY.register("summer_heatwave_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> ORIGINAL_EVOLUTION_EFFECT_TIPS_ITEM = REGISTRY.register("original_evolution_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> MELON_GRAVITY_EFFECT_TIPS_ITEM = REGISTRY.register("melon_gravity_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> SEA_TOUCH_EFFECT_TIPS_ITEM = REGISTRY.register("sea_touch_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> HACKED_THORNS_EFFECT_TIPS_ITEM = REGISTRY.register("hacked_thorns_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> LAVENDER_MOOD_EFFECT_TIPS_ITEM = REGISTRY.register("lavender_mood_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> ORANGE_MUFFIN = REGISTRY.register("orange_muffin", Orange.Muffin::new);
	public static final RegistryObject<Item> HANAMI_DANGO = REGISTRY.register("hanami_dango", CherryLeaves.HanamiDango::new);
	public static final RegistryObject<Item> SAKURA_MOCHI = REGISTRY.register("sakura_mochi", CherryLeaves.SakuraMochi::new);
	public static final RegistryObject<Item> BUILDING_ICON_ITEM = REGISTRY.register("building_icon_item", BuildingIconItemItem::new);
	public static final RegistryObject<Item> MAIN_ICON_ITEM = REGISTRY.register("main_icon_item", MainIconItemItem::new);
	public static final RegistryObject<Item> CHOCOLATE = REGISTRY.register("chocolate", ChocolateItem::new);
	public static final RegistryObject<Item> INCOMPLETE_CREATIVITY_MECHANISM = REGISTRY.register("incomplete_creativity_mechanism", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> KIWIFRUIT = REGISTRY.register("kiwifruit", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> HALF_OF_KIWIFRUIT = REGISTRY.register("half_of_kiwifruit", KiwiFruit.HalfOf::new);
	public static final RegistryObject<Item> KIWIFRUIT_SLICE = REGISTRY.register("kiwifruit_slice", KiwiFruit.Slice::new);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_LOG = block(ModBlocks.KIWIFRUIT_TREE_LOG);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_WOOD = block(ModBlocks.KIWIFRUIT_TREE_WOOD);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_LEAVES = block(ModBlocks.KIWIFRUIT_TREE_LEAVES);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_PLANKS = block(ModBlocks.KIWIFRUIT_TREE_PLANKS);
	public static final RegistryObject<Item> STRIPPED_KIWIFRUIT_TREE_LOG = block(ModBlocks.STRIPPED_KIWIFRUIT_TREE_LOG);
	public static final RegistryObject<Item> STRIPPED_KIWIFRUIT_TREE_WOOD = block(ModBlocks.STRIPPED_KIWIFRUIT_TREE_WOOD);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_DOOR = doubleBlock(ModBlocks.KIWIFRUIT_TREE_DOOR);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_TRAPDOOR = block(ModBlocks.KIWIFRUIT_TREE_TRAPDOOR);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_FENCE = block(ModBlocks.KIWIFRUIT_TREE_FENCE);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_FENCE_GATE = block(ModBlocks.KIWIFRUIT_TREE_FENCE_GATE);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_SLAB = block(ModBlocks.KIWIFRUIT_TREE_SLAB);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_STAIRS = block(ModBlocks.KIWIFRUIT_TREE_STAIRS);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_BOTTON = block(ModBlocks.KIWIFRUIT_TREE_BOTTON);
	public static final RegistryObject<Item> KIWIFRUIT_TREE_PRESSURE_PLATE = block(ModBlocks.KIWIFRUIT_TREE_PRESSURE_PLATE);
	public static final RegistryObject<Item> CHERRIES_SEED = block(ModBlocks.CHERRIES_SEED);
	public static final RegistryObject<Item> STARFRUIT_SEED = block(ModBlocks.STARFRUIT_SEED);
	public static final RegistryObject<Item> OLIVE_FRUIT_SEED = block(ModBlocks.OLIVE_FRUIT_SEED);
	public static final RegistryObject<Item> ORANGE_SEED = block(ModBlocks.ORANGE_SEED);
	public static final RegistryObject<Item> APPLE_SEED = block(ModBlocks.APPLE_SEED);
	public static final RegistryObject<Item> PEACH_SEED = block(ModBlocks.PEACH_SEED);
	public static final RegistryObject<Item> DURIAN_SEED = block(ModBlocks.DURIAN_SEED);
	public static final RegistryObject<Item> LEMON_SEED = block(ModBlocks.LEMON_SEED);
	public static final RegistryObject<Item> PEAR_SEED = block(ModBlocks.PEAR_SEED);
	public static final RegistryObject<Item> MANGO_SEED = block(ModBlocks.MANGO_SEED);
	public static final RegistryObject<Item> KIWIFRUIT_SEED = block(ModBlocks.KIWIFRUIT_SEED);
	public static final RegistryObject<Item> KIWING_WHEREABOUTS_EFFECT_TIPS_ITEM = REGISTRY.register("kiwing_whereabouts_effect_tips_item", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> AVOCADO_TREE_WOOD = block(ModBlocks.AVOCADO_TREE_WOOD);
	public static final RegistryObject<Item> AVOCADO_TREE_LOG = block(ModBlocks.AVOCADO_TREE_LOG);
	public static final RegistryObject<Item> AVOCADO_TREE_PLANKS = block(ModBlocks.AVOCADO_TREE_PLANKS);
	public static final RegistryObject<Item> AVOCADO_TREE_LEAVES = block(ModBlocks.AVOCADO_TREE_LEAVES);
	public static final RegistryObject<Item> AVOCADO_TREE_STAIRS = block(ModBlocks.AVOCADO_TREE_STAIRS);
	public static final RegistryObject<Item> AVOCADO_TREE_SLAB = block(ModBlocks.AVOCADO_TREE_SLAB);
	public static final RegistryObject<Item> AVOCADO_TREE_FENCE = block(ModBlocks.AVOCADO_TREE_FENCE);
	public static final RegistryObject<Item> AVOCADO_TREE_FENCE_GATE = block(ModBlocks.AVOCADO_TREE_FENCE_GATE);
	public static final RegistryObject<Item> AVOCADO_TREE_PRESSURE_PLATE = block(ModBlocks.AVOCADO_TREE_PRESSURE_PLATE);
	public static final RegistryObject<Item> AVOCADO_TREE_BUTTON = block(ModBlocks.AVOCADO_TREE_BUTTON);
	public static final RegistryObject<Item> STRIPPED_AVOCADO_TREE_LOG = block(ModBlocks.STRIPPED_AVOCADO_TREE_LOG);
	public static final RegistryObject<Item> STRIPPED_AVOCADO_TREE_WOOD = block(ModBlocks.STRIPPED_AVOCADO_TREE_WOOD);
	public static final RegistryObject<Item> AVOCADO_TREE_DOOR = doubleBlock(ModBlocks.AVOCADO_TREE_DOOR);
	public static final RegistryObject<Item> AVOCADO_TREE_TRAPDOOR = block(ModBlocks.AVOCADO_TREE_TRAPDOOR);
	public static final RegistryObject<Item> AVOCADO = REGISTRY.register("avocado", ()->new Item(new Item.Properties()));
	public static final RegistryObject<Item> HALF_OF_AVOCADO = REGISTRY.register("half_of_avocado", Avocado.HalfOf::new);
	public static final RegistryObject<Item> AVOCADO_SLICE = REGISTRY.register("avocado_slice", Avocado.Slice::new);
	public static final RegistryObject<Item> AVOCADO_SEED = block(ModBlocks.AVOCADO_SEED);
	public static final RegistryObject<Item> LURKING_DANGER_EFFECT_TIPS_ITEM = REGISTRY.register("lurking_danger_effect_tips_item", ()->new Item(new Item.Properties()));

	private static RegistryObject<Item> block(RegistryObject<Block> block, Component ...components) {
		return REGISTRY.register(block.getId().getPath(), () -> new BlockItem(block.get(), new Item.Properties()){
			@Override
			public void appendHoverText(ItemStack pStack, @Nullable Level pLevel, List<Component> pTooltip, TooltipFlag pFlag) {
				super.appendHoverText(pStack, pLevel, pTooltip, pFlag);
				pTooltip.addAll(List.of(components));
			}
		});
	}

	private static RegistryObject<Item> doubleBlock(RegistryObject<Block> block) {
		return REGISTRY.register(block.getId().getPath(), () -> new DoubleHighBlockItem(block.get(), new Item.Properties()));
	}
	public static void init(IEventBus bus){
		REGISTRY.register(bus);
	}
	@SubscribeEvent
	public static void clientLoad(FMLClientSetupEvent event) {
		event.enqueueWork(() -> ItemProperties.register(BLUEBERRY.get(), new ResourceLocation("manors_bounty:blueberry_name_blueberry_electric"),
                (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) BlueberryNameCheckProcedure.execute(entity, itemStackToRender)));
	}
}
